---
description: 
globs: 
alwaysApply: true
---
# GitHub CLIによるプルリクエスト作成ガイド

## 概要

このドキュメントでは、GitHub CLIを使用して一時ファイルを活用したプルリクエストの作成方法について説明します。

## 準備

1. GitHub CLIのインストールと認証が完了していることを確認してください：

```bash
# GitHub CLIのバージョン確認
gh --version

# 認証状態の確認
gh auth status
```

## 一時ファイルを使用したPR作成手順

### 1. ブランチの状態確認

プルリクエストを作成する前に、以下のコマンドでブランチの状態を確認します：

```bash
# 未コミットの変更確認
git status

# 変更内容の確認
git diff

# mainからの差分確認
git diff main...HEAD

# コミット履歴の確認
git log
```

### 2. 変更の分析

プルリクエストを作成する前に、以下の点を必ず分析します：

- **mainから分岐後のすべてのコミットの確認**
- **変更の性質と目的の把握**
- **プロジェクトへの影響評価**
- **機密情報の有無確認**

### 3. PR説明用の一時ファイルの作成

以下のコマンドで一時ファイルを作成します：

```bash
cat > pr_description.md << 'EOF'
## 概要

変更の概要をここに記述します。

## 変更内容
- 変更点1
- 変更点2

## レビューのポイント
- ポイント1
- ポイント2
EOF
```

### 4. 一時ファイルを使用したPR作成

作成した一時ファイルを使用してプルリクエストを作成します：

```bash
gh pr create --title "PRのタイトル" --body-file pr_description.md
```

オプション：ベースブランチやレビュアーの指定:

```bash
gh pr create --title "PRのタイトル" --body-file pr_description.md --base main --reviewer username1,username2
```

### 5. 一時ファイルの削除

PRの作成が完了したら、一時ファイルを削除します：

```bash
rm pr_description.md
```

## コミットメッセージとPRのプレフィクス

| プレフィックス | 説明 |
|--------------|------|
| feat: | 新機能の追加 |
| fix: | バグ修正 |
| docs: | ドキュメントのみの変更 |
| style: | コードの意味に影響を与えない変更（空白、フォーマット、セミコロンの欠落など） |
| refactor: | バグ修正や機能追加を行わないコード変更 |
| perf: | パフォーマンスを向上させるコード変更 |
| test: | テストの追加や既存テストの修正 |
| chore: | ビルドプロセスや補助ツール、ドキュメント生成などのライブラリの変更 |

## PR説明のテンプレート例

```markdown
## 概要

TypeScriptのエラー処理をより型安全にするため、Result型を導入しました。

## 変更内容

- neverthrowライブラリの導入
- APIクライアントでのResult型の使用
- エラーケースの型定義
- テストケースの追加

## 技術的な詳細

- 既存の例外処理をResult型に置き換え
- エラー型の共通化
- モック実装の改善

## レビューのポイント

- Result型の使用方法が適切か
- エラーケースの網羅性
- テストの十分性
```

## よくあるオプション

| オプション | 説明 | 使用例 |
|------------|------|--------|
| `--title` | PRのタイトルを指定 | `--title "feat: Result型の導入"` |
| `--body-file` | PR説明のファイルを指定 | `--body-file pr_description.md` |
| `--base` | ベースブランチの指定 | `--base main` |
| `--reviewer` | レビュアーの指定 | `--reviewer username1,username2` |
| `--assignee` | 担当者の指定 | `--assignee username` |
| `--label` | ラベルの指定 | `--label "enhancement"` |
| `--draft` | 下書きPRとして作成 | `--draft` |

## 重要な注意事項

1. プルリクエスト関連
   - 必要に応じて新しいブランチを作成
   - 変更を適切にコミット
   - リモートへのプッシュは `-u` フラグを使用
   - すべての変更を分析

2. 避けるべき操作
   - 対話的なgitコマンド（-iフラグ）の使用
   - リモートリポジトリへの直接プッシュ
   - git設定の変更

詳細なオプションは以下のコマンドで確認できます：

```bash
gh pr create --help
``` 