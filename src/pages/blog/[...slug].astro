---
import { getList, getDetail } from '../../library/microcms';
import { formatRichText } from '../../library/utils';
import BlogPost from '../../layouts/BlogPost.astro';
import PublishedDate from '../../components/PublishedDate.astro';
import LinkButton from '../../components/LinkButton.astro';
import ShareButton from '../../components/ShareButton.astro';

import styles from './blog.module.css';

export async function getStaticPaths() {
  const posts = await getList();
  return posts.contents.map(post => ({
    params: { slug: post.id },
    props: post,
  }));
}

const { slug } = Astro.params;
const blog = await getDetail(slug as string);
---

<BlogPost {...blog}>
  <h1 class={styles.title}>{blog.title}</h1>
  <!-- <TagList tags={blog.tags} /> -->
  <p class={styles.description}>{blog.description}</p>
  <div class={styles.meta}>
    {
      blog.writer && (
        <div class={styles.writer}>
          <picture>
            <source
              type="image/avif"
              srcset={`${blog.writer?.image?.url}?fm=avif&fit=crop&w=48&h=48 1x, ${blog.writer?.image?.url}?fm=avif&fit=crop&w=48&h=48&dpr=2 2x`}
            />
            <source
              type="image/webp"
              srcset={`${blog.writer?.image?.url}?fm=webp&fit=crop&w=48&h=48 1x, ${blog.writer?.image?.url}?fm=webp&fit=crop&w=48&h=48&dpr=2 2x`}
            />
            <img
              src={`${blog.writer?.image?.url}?&fit=crop&w=48&h=48`}
              alt=""
              class={styles.writerIcon}
              width={blog.writer?.image?.width}
              height={blog.writer?.image?.height}
              decoding="async"
              fetchpriority="high"
            />
          </picture>
          <span class={styles.writerName}>{blog.writer?.name}</span>
        </div>
      )
    }
    <PublishedDate date={blog.publishedAt || blog.createdAt} />
  </div>
  <div class={styles.thumbnail}>
    <picture>
      <source
        type="image/avif"
        media="(max-width: 640px)"
        srcset={`${blog.thumbnail?.url}?fm=avif&w=414 1x, ${blog.thumbnail?.url}?fm=avif&w=414&dpr=2 2x`}
      />
      <source type="image/avif" srcset={`${blog.thumbnail?.url}?fm=avif&fit=crop&w=1200&h=630 1x, ${blog.thumbnail?.url}?fm=avif&fit=crop&w=1200&h=630&dpr=2 2x`} />
      <source
        type="image/webp"
        media="(max-width: 640px)"
        srcset={`${blog.thumbnail?.url}?fm=webp&w=414 1x, ${blog.thumbnail?.url}?fm=webp&w=414&dpr=2 2x`}
      />
      <source type="image/webp" srcset={`${blog.thumbnail?.url}?fm=webp&fit=crop&w=1200&h=630 1x, ${blog.thumbnail?.url}?fm=webp&fit=crop&w=1200&h=630&dpr=2 2x`} />
      <img
        srcset={`${blog.thumbnail?.url}?fit=crop&w=1200&h=630 1x, ${blog.thumbnail?.url}?fit=crop&w=1200&h=630&dpr=2 2x`}
        alt=""
        class={styles.thumbnailFront}
        width={blog.thumbnail?.width}
        height={blog.thumbnail?.height}
        decoding="async"
        transition:name={`BlogMV-${blog.id}`}
        fetchpriority="high"
      />
    </picture>
    <picture class={styles.thumbnailBlur}>
      <source
        type="image/avif"
        media="(max-width: 640px)"
        srcset={`${blog.thumbnail?.url}?fm=avif&w=414&q=10&blur=75 1x, ${blog.thumbnail?.url}?fm=avif&w=414&q=10&blur=75&dpr=2 2x`}
      />
      <source
        type="image/avif"
        srcset={`${blog.thumbnail?.url}?fm=avif&fit=crop&w=1200&h=630&q=10&blur=75 1x, ${blog.thumbnail?.url}?fm=avif&fit=crop&w=1200&h=630&q=10&blur=75&dpr=2 2x`}
      />
      <source
        type="image/webp"
        media="(max-width: 640px)"
        srcset={`${blog.thumbnail?.url}?fm=webp&w=41&q=10&blur=75 1x, ${blog.thumbnail?.url}?fm=webp&w=41&q=10&blur=75&dpr=2 2x`}
      />
      <source
        type="image/webp"
        srcset={`${blog.thumbnail?.url}?fm=webp&fit=crop&w=120&h=63&q=10&blur=75 1x, ${blog.thumbnail?.url}?fm=webp&fit=crop&w=120&h=63&q=10&blur=75&dpr=2 2x`}
      />
      <img
        srcset={`${blog.thumbnail?.url}?fit=crop&w=1200&h=630&q=10&blur=75 1x, ${blog.thumbnail?.url}?fit=crop&w=1200&h=630&q=10&blur=75&dpr=2 2x`}
        alt=""
        class={styles.thumbnail}
        width={blog.thumbnail?.width}
        height={blog.thumbnail?.height}
        loading="async"
        decoding="async"
      />
    </picture>
  </div>
  <div class={styles.column}>
    <div class={styles.content}>
      <div id="cms" class={styles.cms} set:html={formatRichText(blog.content)} />
      <div class={styles.twitterShareBlock}>
        <ShareButton blogId={blog.id} blogTitle={blog.title} />
      </div>
    </div>
    {
      blog.tocVisible && (
        <div class={styles.toc}>
          <div class={styles.tocContainer}>
            <div class={styles.tocTitle}>目次</div>
            <div class="toc" />
          </div>
        </div>
      )
    }
  </div>
  <div class={styles.topButton}>
    <LinkButton href="/blog/">トップページに戻る</LinkButton>
  </div>
</BlogPost>

<script>
  import tocbot from 'tocbot';

  document.addEventListener('astro:page-load', () => {
    const tocSelector = '.toc';
    const contentSelector = '#cms';
    const tocElement = document.querySelector(tocSelector);
    const cmsElement = document.querySelector(contentSelector);
    if (tocElement && cmsElement) {
      tocbot.init({
        tocSelector: tocSelector,
        contentSelector: contentSelector,
        headingSelector: 'h2, h3, h4',
        scrollSmoothDuration: 300,
      });
    }
  });
</script>

<style is:global>
  .toc .toc-list {
    padding-left: 1.5rem;
    padding-top: 0.1rem;
    list-style-type: none;
  }

  .toc > .toc-list {
    padding-left: 0;
  }

  .toc .toc-link {
    color: rgba(0, 0, 0, 0.6);
  }

  .toc .is-active-link {
    color: rgba(0, 0, 0, 0.87);
    font-weight: 700;
  }
</style>
